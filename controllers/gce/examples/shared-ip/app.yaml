apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: my-echo-deploy
spec:
  replicas: 3
  template:
    metadata:
      labels:
        app: echo
    spec:
      containers:
      - name: echoserver
        image: nicksardo/echoserver:latest
        imagePullPolicy: Always
        env:
        - name: namespace
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: podname
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: nodename
          valueFrom:
            fieldRef:
              fieldPath: spec.nodeName
        ports:
        - name: http
          containerPort: 80
        - name: https
          containerPort: 443
        readinessProbe:
          httpGet:
            path: /healthcheck
            scheme: HTTPS
            port: https
        livenessProbe:
          httpGet:
            path: /healthcheck
            scheme: HTTPS
            port: https
---
apiVersion: v1
kind: Service
metadata:
  name: my-echo-svc
  annotations:
    service.alpha.kubernetes.io/app-protocols: '{"my-https-port":"HTTPS","my-http-port":"HTTP"}'
  labels:
    app: echo
spec:
  type: NodePort
  ports:
  - port: 80
    protocol: TCP
    name: my-http-port
  - port: 443
    protocol: TCP
    name: my-https-port
  selector:
    app: echo
---
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  name: my-echo-ingress
  annotations:
    kubernetes.io/ingress.global-static-ip-name: "web"
spec:
  backend:
    serviceName: my-echo-svc
    servicePort: my-http-port
---
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  name: my-echo-ingress-https
  annotations:
    kubernetes.io/ingress.global-static-ip-name: "web"
    ingress.gcp.kubernetes.io/pre-shared-cert: "acme-cert"
    kubernetes.io/ingress.allow-http: "false"
spec:
  backend:
    serviceName: my-echo-svc
    servicePort: my-https-port
